plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id "org.flywaydb.flyway" version "7.5.0"
    id "com.gorylenko.gradle-git-properties" version "2.2.4"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: "com.gorylenko.gradle-git-properties"
apply from: rootProject.file('gradle/config/jacoco-config.gradle')
apply from: rootProject.file('gradle/config/git-hooks.gradle')
apply from: rootProject.file('gradle/config/timing.gradle')

group = 'com.thoughtworks.security'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2020.0.0")
}

checkstyleMain {
    maxWarnings = 0
    maxErrors = 0
}

checkstyleTest {
    maxWarnings = 0
    maxErrors = 0
}

jacoco {
    toolVersion = "0.8.5"
}

flyway {
    url = 'jdbc:mysql://localhost:3306'
    user = 'root'
    password = '12345678'
    schemas = ['scp']
}
dependencies {
    // -------- springboot ------------
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // -------- db ------------
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    // -------- aws ------------
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.939')
    implementation 'com.amazonaws:aws-java-sdk-s3'


    // -------- lombok ------------
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // -------- test ------------
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'org.jeasy:easy-random-core:4.2.0'


    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    compile group: 'pl.project13.maven', name: 'git-commit-id-plugin', version: '4.0.3'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }

    testLogging {
        events "passed", "skipped", "failed"
    }
    mustRunAfter test
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification
check.dependsOn integrationTest

bootRun {
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"]
}

gitProperties {
    dotGitDirectory = "${project.rootDir}/.git"
    dateFormat = "yyyy-MM-dd'T'HH:mm Z"
    dateFormatTimeZone = "GMT+8"
    keys = ['git.branch', 'git.commit.id', 'git.commit.time', 'git.commit.user.name', 'git.build.version']
}

